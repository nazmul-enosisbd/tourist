"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _Transition = _interopRequireDefault(require("react-transition-group/Transition"));

var _safeFindDOMNode = _interopRequireDefault(require("react-overlays/safeFindDOMNode"));

var _useMergedRefs = _interopRequireDefault(require("@restart/hooks/useMergedRefs"));

var _jsxRuntime = require("react/jsx-runtime");

// Normalizes Transition callbacks when nodeRef is used.
var TransitionWrapper = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {
  var onEnter = _ref.onEnter,
      onEntering = _ref.onEntering,
      onEntered = _ref.onEntered,
      onExit = _ref.onExit,
      onExiting = _ref.onExiting,
      onExited = _ref.onExited,
      addEndListener = _ref.addEndListener,
      children = _ref.children,
      childRef = _ref.childRef,
      props = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "addEndListener", "children", "childRef"]);
  var nodeRef = (0, _react.useRef)(null);
  var mergedRef = (0, _useMergedRefs.default)(nodeRef, childRef);

  var attachRef = function attachRef(r) {
    mergedRef((0, _safeFindDOMNode.default)(r));
  };

  var normalize = function normalize(callback) {
    return function (param) {
      if (callback && nodeRef.current) {
        callback(nodeRef.current, param);
      }
    };
  };
  /* eslint-disable react-hooks/exhaustive-deps */


  var handleEnter = (0, _react.useCallback)(normalize(onEnter), [onEnter]);
  var handleEntering = (0, _react.useCallback)(normalize(onEntering), [onEntering]);
  var handleEntered = (0, _react.useCallback)(normalize(onEntered), [onEntered]);
  var handleExit = (0, _react.useCallback)(normalize(onExit), [onExit]);
  var handleExiting = (0, _react.useCallback)(normalize(onExiting), [onExiting]);
  var handleExited = (0, _react.useCallback)(normalize(onExited), [onExited]);
  var handleAddEndListener = (0, _react.useCallback)(normalize(addEndListener), [addEndListener]);
  /* eslint-enable react-hooks/exhaustive-deps */

  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Transition.default, (0, _extends2.default)({
    ref: ref
  }, props, {
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener: handleAddEndListener,
    nodeRef: nodeRef,
    children: typeof children === 'function' ? function (status, innerProps) {
      return children(status, (0, _extends2.default)({}, innerProps, {
        ref: attachRef
      }));
    } : /*#__PURE__*/_react.default.cloneElement(children, {
      ref: attachRef
    })
  }));
});

var _default = TransitionWrapper;
exports.default = _default;
module.exports = exports.default;