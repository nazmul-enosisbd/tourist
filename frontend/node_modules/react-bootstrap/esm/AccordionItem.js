import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import classNames from 'classnames';
import * as React from 'react';
import { useMemo } from 'react';
import { useBootstrapPrefix } from './ThemeProvider';
import AccordionItemContext from './AccordionItemContext';
import { jsx as _jsx } from "react/jsx-runtime";
var AccordionItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$as = _ref.as,
      Component = _ref$as === void 0 ? 'div' : _ref$as,
      bsPrefix = _ref.bsPrefix,
      className = _ref.className,
      eventKey = _ref.eventKey,
      props = _objectWithoutPropertiesLoose(_ref, ["as", "bsPrefix", "className", "eventKey"]);

  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');
  var contextValue = useMemo(function () {
    return {
      eventKey: eventKey
    };
  }, [eventKey]);
  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {
    value: contextValue,
    children: /*#__PURE__*/_jsx(Component, _extends({
      ref: ref
    }, props, {
      className: classNames(className, bsPrefix)
    }))
  });
});
AccordionItem.displayName = 'AccordionItem';
export default AccordionItem;