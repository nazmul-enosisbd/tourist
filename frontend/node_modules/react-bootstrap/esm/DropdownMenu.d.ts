import PropTypes from 'prop-types';
import * as React from 'react';
import { UseDropdownMenuOptions } from 'react-overlays/DropdownMenu';
import { BsPrefixProps, BsPrefixRefForwardingComponent, SelectCallback } from './helpers';
export declare type AlignDirection = 'start' | 'end';
export declare type ResponsiveAlignProp = {
    sm: AlignDirection;
} | {
    md: AlignDirection;
} | {
    lg: AlignDirection;
} | {
    xl: AlignDirection;
};
export declare type AlignType = AlignDirection | ResponsiveAlignProp;
export declare type DropdownMenuVariant = 'dark';
export interface DropdownMenuProps extends BsPrefixProps, Omit<React.HTMLAttributes<HTMLElement>, 'onSelect'> {
    show?: boolean;
    renderOnMount?: boolean;
    flip?: boolean;
    align?: AlignType;
    alignRight?: boolean;
    onSelect?: SelectCallback;
    rootCloseEvent?: 'click' | 'mousedown';
    popperConfig?: UseDropdownMenuOptions['popperConfig'];
    variant?: DropdownMenuVariant;
}
export declare const alignPropType: PropTypes.Requireable<AlignDirection | PropTypes.InferProps<{
    sm: PropTypes.Requireable<AlignDirection>;
}> | PropTypes.InferProps<{
    md: PropTypes.Requireable<AlignDirection>;
}> | PropTypes.InferProps<{
    lg: PropTypes.Requireable<AlignDirection>;
}> | PropTypes.InferProps<{
    xl: PropTypes.Requireable<AlignDirection>;
}>>;
declare const DropdownMenu: BsPrefixRefForwardingComponent<'div', DropdownMenuProps>;
export default DropdownMenu;
