import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import classNames from 'classnames';
import * as React from 'react';
import { useBootstrapPrefix } from './ThemeProvider';
import Button from './Button';
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";

var noop = function noop() {
  return undefined;
};

var ToggleButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var bsPrefix = _ref.bsPrefix,
      name = _ref.name,
      className = _ref.className,
      checked = _ref.checked,
      type = _ref.type,
      onChange = _ref.onChange,
      value = _ref.value,
      disabled = _ref.disabled,
      id = _ref.id,
      inputRef = _ref.inputRef,
      props = _objectWithoutPropertiesLoose(_ref, ["bsPrefix", "name", "className", "checked", "type", "onChange", "value", "disabled", "id", "inputRef"]);

  bsPrefix = useBootstrapPrefix(bsPrefix, 'btn-check');
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx("input", {
      className: bsPrefix,
      name: name,
      type: type,
      value: value,
      ref: inputRef,
      autoComplete: "off",
      checked: !!checked,
      disabled: !!disabled,
      onChange: onChange || noop,
      id: id
    }), /*#__PURE__*/_jsx(Button, _extends({}, props, {
      ref: ref,
      className: classNames(className, disabled && 'disabled'),
      type: undefined,
      as: "label",
      htmlFor: id
    }))]
  });
});
ToggleButton.displayName = 'ToggleButton';
export default ToggleButton;