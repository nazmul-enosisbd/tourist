{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazmulhasan\\\\Desktop\\\\Learning\\\\React\\\\tourist-app-redux\\\\src\\\\components\\\\UpdatePage.js\";\nimport React, { Component } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/CreatePage.css';\nimport { addPlace } from '../redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdatePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.convertBase64ToFile = async function (image) {\n      const byteString = atob(image.split(',')[1]);\n      const ab = new ArrayBuffer(byteString.length);\n      const ia = new Uint8Array(ab);\n\n      for (let i = 0; i < byteString.length; i += 1) {\n        ia[i] = byteString.charCodeAt(i);\n      }\n\n      const newBlob = new Blob([ab], {\n        type: 'image/jpeg'\n      });\n      return newBlob;\n    };\n\n    this.dataURLtoFile = async (dataurl, filename) => {\n      var arr = dataurl.split(','),\n          mime = arr[0].match(/:(.*?);/)[1],\n          bstr = atob(arr[1]),\n          n = bstr.length,\n          u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n\n      return new File([u8arr], filename, {\n        type: mime\n      });\n    };\n\n    this.toBase64 = file => new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n    });\n\n    this.handleReset = event => {\n      [\"type\", \"name\", \"address\", \"rating\"].map(id => document.getElementById(id).value = null);\n      document.getElementById('picture').value = null;\n      this.setState({ ...this.state,\n        inputs: { ...this.state.inputs,\n          name: null,\n          address: null,\n          rating: null,\n          type: null,\n          picture: null\n        }\n      });\n    };\n\n    this.handleSubmit = async event => {\n      if (!this.validateInputs()) {\n        return;\n      }\n\n      const base_string = await this.toBase64(this.state.inputs.picture);\n      const place = {\n        id: this.props.id,\n        name: this.state.inputs.name,\n        address: this.state.inputs.address,\n        rating: this.state.inputs.rating,\n        type: this.state.inputs.type,\n        picture: base_string\n      }; // this.props.addPlace(place);\n\n      const requestOptions = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: place.name,\n          address: place.address,\n          rating: place.rating,\n          type_id: 2,\n          picture: place.picture\n        })\n      };\n      await fetch(`http://127.0.0.1:8000/api/places/${this.props.inputs.id}/`, requestOptions).then(response => {\n        response.json();\n        console.log(response);\n      }).then(data => console.log(data));\n      this.handleReset(this);\n    };\n\n    this.handleInputChange = event => {\n      let {\n        id,\n        value\n      } = event.target;\n\n      if (id === 'picture') {\n        this.setState({ ...this.state,\n          inputs: { ...this.state.inputs,\n            picture: event.target.files[0]\n          }\n        });\n        return;\n      }\n\n      this.setState({ ...this.state,\n        inputs: { ...this.state.inputs,\n          [id]: value\n        }\n      });\n    };\n\n    this.createOptinos = () => this.state.typeList.length ? this.state.typeList.map(data => /*#__PURE__*/_jsxDEV(\"option\", {\n      children: data\n    }, data, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)) : \"\";\n\n    this.state = {\n      inputs: {\n        name: this.props.inputs.name,\n        address: this.props.inputs.address,\n        rating: this.props.inputs.rating,\n        type: \"beach\",\n        picture: this.dataURLtoFile(this.props.inputs.picture, 'input.png')\n      },\n      typeList: [\"Beach\", \"Hills\", \"Fountain\", \"Landmark\"]\n    };\n  }\n\n  validateInputs() {\n    var name = document.getElementById('name').value;\n    var address = document.getElementById('address').value;\n    var rating = document.getElementById('rating').value;\n    var type = document.getElementById('type').value;\n    var picture = document.getElementById('picture').files;\n\n    if (name === \"\") {\n      alert(\"Name must be filled out\");\n      return false;\n    }\n\n    if (address === \"\") {\n      alert(\"Address must be filled out\");\n      return false;\n    }\n\n    if (rating === \"\" || parseInt(rating) < 1 || parseInt(rating) > 5) {\n      alert(\"Rating must be between 1 and 5\");\n      return false;\n    }\n\n    var types = {\n      BEACH: 0,\n      HILLS: 1,\n      FOUNTAIN: 2,\n      LANDMARK: 3\n    };\n\n    if (!(type.toUpperCase() in types)) {\n      alert(\"Type must be Beach/Hills/Fountain/Landmark\");\n      return false;\n    }\n\n    if (picture.length < 1) {\n      alert(\"Picture fiels is empty\");\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \" Add a New Tourist Place \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        id: \"test-form\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: \"lg\",\n            lg: 3,\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"name\",\n              size: \"lg\",\n              type: \"text\",\n              bsPrefix: \"custom-input\",\n              onChange: this.handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: \"lg\",\n            lg: 3,\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"address\",\n              size: \"lg\",\n              type: \"text\",\n              bsPrefix: \"custom-input\",\n              onChange: this.handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: \"lg\",\n            lg: 3,\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"rating\",\n              size: \"lg\",\n              type: \"number\",\n              min: \"1\",\n              max: \"5\",\n              bsPrefix: \"custom-input\",\n              onChange: this.handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: \"lg\",\n            lg: 3,\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"type\",\n              size: \"lg\",\n              as: \"select\",\n              bsPrefix: \"custom-input\",\n              onChange: this.handleInputChange,\n              required: true,\n              children: this.createOptinos()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: \"lg\",\n            lg: 3,\n            children: \"Picture:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"picture\",\n              size: \"lg\",\n              type: \"file\",\n              accept: \"image/*\",\n              bsPrefix: \"custom-input\",\n              onChange: this.handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          bsPrefix: \"custom-btn-reset\",\n          onClick: this.handleReset,\n          children: \" Reset \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          bsPrefix: \"custom-btn-submit\",\n          onClick: this.handleSubmit,\n          children: \" Update \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"back-link\",\n            children: \"Back to Tourist Place List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 34\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    id: state.id,\n    inputs: state.inputs\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPlace: place => dispatch(addPlace(place))\n  };\n}; //export default CreatePage;\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdatePage);","map":{"version":3,"sources":["C:/Users/nazmulhasan/Desktop/Learning/React/tourist-app-redux/src/components/UpdatePage.js"],"names":["React","Component","Form","Row","Col","Button","Link","connect","addPlace","UpdatePage","constructor","props","convertBase64ToFile","image","byteString","atob","split","ab","ArrayBuffer","length","ia","Uint8Array","i","charCodeAt","newBlob","Blob","type","dataURLtoFile","dataurl","filename","arr","mime","match","bstr","n","u8arr","File","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","handleReset","event","map","id","document","getElementById","value","setState","state","inputs","name","address","rating","picture","handleSubmit","validateInputs","base_string","place","requestOptions","method","headers","body","JSON","stringify","type_id","fetch","then","response","json","console","log","data","handleInputChange","target","files","createOptinos","typeList","alert","parseInt","types","BEACH","HILLS","FOUNTAIN","LANDMARK","toUpperCase","render","textAlign","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Form,Row, Col, Button} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style/CreatePage.css';\r\nimport { addPlace } from '../redux';\r\n\r\nclass UpdatePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inputs: {\r\n                name: this.props.inputs.name,\r\n                address: this.props.inputs.address,\r\n                rating: this.props.inputs.rating,\r\n                type: \"beach\",\r\n                picture: this.dataURLtoFile(this.props.inputs.picture, 'input.png'),\r\n            },\r\n            typeList: [\"Beach\", \"Hills\", \"Fountain\", \"Landmark\"],\r\n        }\r\n    }\r\n\r\n    validateInputs() {\r\n        var name = document.getElementById('name').value;\r\n        var address = document.getElementById('address').value;\r\n        var rating = document.getElementById('rating').value;\r\n        var type = document.getElementById('type').value;\r\n        var picture = document.getElementById('picture').files;\r\n\r\n        if(name === \"\") {\r\n            alert(\"Name must be filled out\");\r\n            return false;\r\n        }\r\n        if(address === \"\") {\r\n            alert(\"Address must be filled out\");\r\n            return false;\r\n        }\r\n        if(rating === \"\" || parseInt(rating) < 1 || parseInt(rating) > 5) {\r\n            alert(\"Rating must be between 1 and 5\");\r\n            return false;\r\n        }\r\n\r\n        var types = {\r\n            BEACH : 0,\r\n            HILLS : 1,\r\n            FOUNTAIN : 2,\r\n            LANDMARK : 3\r\n        };\r\n\r\n        if(!(type.toUpperCase() in types)) {\r\n            alert(\"Type must be Beach/Hills/Fountain/Landmark\");\r\n            return false;\r\n        }\r\n\r\n        if(picture.length < 1) {\r\n            alert(\"Picture fiels is empty\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    convertBase64ToFile = async function (image) {\r\n        const byteString = atob(image.split(',')[1]);\r\n        const ab = new ArrayBuffer(byteString.length);\r\n        const ia = new Uint8Array(ab);\r\n        for (let i = 0; i < byteString.length; i += 1) {\r\n          ia[i] = byteString.charCodeAt(i);\r\n        }\r\n        const newBlob = new Blob([ab], {\r\n          type: 'image/jpeg',\r\n        });\r\n        return newBlob;\r\n    };\r\n\r\n    dataURLtoFile = async (dataurl, filename) => {\r\n \r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), \r\n            n = bstr.length, \r\n            u8arr = new Uint8Array(n);\r\n            \r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        \r\n        return new File([u8arr], filename, {type:mime});\r\n    }\r\n\r\n    toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    handleReset = event => {\r\n        [ \"type\", \"name\", \"address\", \"rating\"].map( id =>\r\n            document.getElementById(id).value = null  \r\n        );\r\n        document.getElementById('picture').value = null;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            inputs: {\r\n                ...this.state.inputs,\r\n                name: null, address: null, rating: null, type: null, picture: null\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        if(!this.validateInputs()){\r\n            return;\r\n        }\r\n        const base_string = await this.toBase64(this.state.inputs.picture);\r\n        const place = {\r\n            id: this.props.id,\r\n            name: this.state.inputs.name,\r\n            address: this.state.inputs.address,\r\n            rating: this.state.inputs.rating,\r\n            type: this.state.inputs.type,\r\n            picture: base_string\r\n        }\r\n\r\n        // this.props.addPlace(place);\r\n\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                name: place.name,\r\n                address: place.address,\r\n                rating: place.rating,\r\n                type_id: 2,\r\n                picture: place.picture\r\n            })\r\n        };\r\n        await fetch(`http://127.0.0.1:8000/api/places/${this.props.inputs.id}/`, requestOptions)\r\n            .then(response => {\r\n                response.json()\r\n                console.log(response)\r\n            })\r\n            .then(data => console.log(data));\r\n\r\n        this.handleReset(this);\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        let {id, value} = event.target;\r\n        if(id === 'picture') {\r\n            this.setState({\r\n                ...this.state,\r\n                inputs: {\r\n                    ...this.state.inputs,\r\n                    picture: event.target.files[0]\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            inputs: {\r\n                ...this.state.inputs,\r\n                [id]: value\r\n            }\r\n        });\r\n    }\r\n\r\n    createOptinos = () => \r\n        this.state.typeList.length \r\n        ? this.state.typeList.map(data => \r\n            <option key={data}>{data}</option>\r\n        )\r\n        : \"\";\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"centered-wrapper\">\r\n                <h2 style={{textAlign: \"center\"}}> Add a New Tourist Place </h2>\r\n                <br /> <br />\r\n                <Form.Group id=\"test-form\">\r\n                    <Row>\r\n                        <Form.Label column=\"lg\" lg={3}>\r\n                            Name:\r\n                        </Form.Label>\r\n                        <Col>\r\n                            <Form.Control id=\"name\" size=\"lg\" type=\"text\" bsPrefix=\"custom-input\" onChange={this.handleInputChange} required />\r\n                        </Col>\r\n                    </Row>\r\n                    <br /> <br />\r\n                    <Row>\r\n                        <Form.Label column=\"lg\" lg={3}>\r\n                            Address:\r\n                        </Form.Label>\r\n                        <Col>\r\n                            <Form.Control id=\"address\" size=\"lg\" type=\"text\" bsPrefix=\"custom-input\" onChange={this.handleInputChange} required />\r\n                        </Col>\r\n                    </Row>\r\n                    <br /> <br />\r\n                    <Row>\r\n                        <Form.Label column=\"lg\" lg={3}>\r\n                            Rating:\r\n                        </Form.Label>\r\n                        <Col>\r\n                            <Form.Control id=\"rating\" size=\"lg\" type=\"number\" min=\"1\" max=\"5\" bsPrefix=\"custom-input\" onChange={this.handleInputChange} required />\r\n                        </Col>\r\n                    </Row>\r\n                    <br /> <br />\r\n                    <Row>\r\n                        <Form.Label column=\"lg\" lg={3}>\r\n                            Type:\r\n                        </Form.Label>\r\n                        <Col>\r\n                            <Form.Control id=\"type\" size=\"lg\" as=\"select\" bsPrefix=\"custom-input\" onChange={this.handleInputChange} required>\r\n                                {this.createOptinos()}\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Row>\r\n                    <br /> <br />\r\n                    <Row>\r\n                        <Form.Label column=\"lg\" lg={3}>\r\n                            Picture:\r\n                        </Form.Label>\r\n                        <Col>\r\n                            <Form.Control id=\"picture\" size=\"lg\" type=\"file\" accept=\"image/*\" bsPrefix=\"custom-input\" onChange={this.handleInputChange} required />\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Button bsPrefix=\"custom-btn-reset\" onClick={this.handleReset}> Reset </Button>\r\n                    <Button bsPrefix=\"custom-btn-submit\" onClick={this.handleSubmit}> Update </Button>\r\n                    <br />\r\n                    <Link to='/'><p className=\"back-link\">Back to Tourist Place List</p> </Link>\r\n                </Form.Group>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        id: state.id,\r\n        inputs: state.inputs\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addPlace: (place) => dispatch(addPlace(place))\r\n    }\r\n}\r\n\r\n//export default CreatePage;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdatePage)"]},"metadata":{},"sourceType":"module"}