{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazmulhasan\\\\Desktop\\\\Learning\\\\React\\\\tourist-app\\\\src\\\\components\\\\TouristApp.js\";\nimport React, { Component } from 'react';\nimport CreatePage from './CreatePage';\nimport ListPage from './ListPage';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TouristPlace {\n  constructor(id, name, address, rating, type, picture) {\n    this.id = id;\n    this.name = name;\n    this.address = address;\n    this.rating = rating;\n    this.type = type;\n    this.picture = picture;\n  }\n\n}\n\nclass TouristApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toBase64 = file => new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n    });\n\n    this.state = {\n      inputs: {\n        name: null,\n        address: null,\n        rating: null,\n        type: \"beach\",\n        picture: null\n      },\n      typeList: [\"Beach\", \"Hills\", \"Fountain\", \"Landmark\"],\n      touristPlace: [],\n      sortedTouristPlace: [],\n      id: 1,\n      sort_state: 0\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.rowDeleteById = this.rowDeleteById.bind(this);\n    this.sort = this.sort.bind(this);\n    this.sortAction = this.sortAction.bind(this);\n  }\n\n  sort_asc() {\n    let sorted = this.state.sortedTouristPlace;\n    let place_list = this.state.touristPlace;\n    sorted = place_list.map(a => Object.assign({}, a));\n    sorted.sort(function (a, b) {\n      return a.rating - b.rating;\n    });\n    return sorted;\n  }\n\n  sort_desc() {\n    let sorted = this.state.sortedTouristPlace;\n    let place_list = this.state.touristPlace;\n    sorted = place_list.map(a => Object.assign({}, a));\n    sorted.sort(function (a, b) {\n      return b.rating - a.rating;\n    });\n    return sorted;\n  }\n\n  sort() {\n    switch (this.state.sort_state) {\n      case 0:\n        return this.state.touristPlace;\n\n      case 1:\n        return this.sort_asc();\n\n      case 2:\n        return this.sort_desc();\n\n      default:\n        return this.state.touristPlace;\n    }\n  }\n\n  sortAction() {\n    this.setState({\n      sort_state: (this.state.sort_state + 1) % 3\n    });\n  }\n\n  rowDeleteById(event) {\n    console.log(event.target.parentNode.parentNode);\n    const id = event.target.parentNode.parentNode.id;\n    var new_list = this.state.touristPlace.filter(function (place) {\n      return place.id !== parseInt(id);\n    });\n    console.log(new_list);\n    this.setState({ ...this.state,\n      touristPlace: new_list\n    });\n  }\n\n  handleReset(event) {\n    [\"type\", \"name\", \"address\", \"rating\"].map(id => document.getElementById(id).value = null);\n    document.getElementById('picture').value = null;\n    this.setState({ ...this.state,\n      inputs: { ...this.state.inputs,\n        name: null,\n        address: null,\n        rating: null,\n        type: null,\n        picture: null\n      }\n    });\n  }\n\n  validateInputs() {\n    var name = document.getElementById('name').value;\n    var address = document.getElementById('address').value;\n    var rating = document.getElementById('rating').value;\n    var type = document.getElementById('type').value;\n    var picture = document.getElementById('picture').files;\n\n    if (name === \"\") {\n      alert(\"Name must be filled out\");\n      return false;\n    }\n\n    if (address === \"\") {\n      alert(\"Address must be filled out\");\n      return false;\n    }\n\n    if (rating === \"\" || parseInt(rating) < 1 || parseInt(rating) > 5) {\n      alert(\"Rating must be between 1 and 5\");\n      return false;\n    }\n\n    var types = {\n      BEACH: 0,\n      HILLS: 1,\n      FOUNTAIN: 2,\n      LANDMARK: 3\n    };\n\n    if (!(type.toUpperCase() in types)) {\n      alert(\"Type must be Beach/Hills/Fountain/Landmark\");\n      return false;\n    }\n\n    if (picture.length < 1) {\n      alert(\"Picture fiels is empty\");\n      return false;\n    }\n\n    return true;\n  }\n\n  async handleSubmit(event) {\n    if (!this.validateInputs()) {\n      return;\n    }\n\n    const base_string = await this.toBase64(this.state.inputs.picture);\n    const tourist_place = new TouristPlace(this.state.id, this.state.inputs.name, this.state.inputs.address, this.state.inputs.rating, this.state.inputs.type, base_string);\n    var new_list = this.state.touristPlace.concat(tourist_place);\n    this.setState({ ...this.state,\n      touristPlace: new_list,\n      id: this.state.id + 1\n    });\n    this.handleReset(this);\n  }\n\n  handleInputChange(event) {\n    let {\n      id,\n      value\n    } = event.target;\n\n    if (id === 'picture') {\n      this.setState({ ...this.state,\n        inputs: { ...this.state.inputs,\n          picture: event.target.files[0]\n        }\n      });\n      return;\n    }\n\n    this.setState({ ...this.state,\n      inputs: { ...this.state.inputs,\n        [id]: value\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ListPage, {\n            state: this.state,\n            rowDeleteById: this.rowDeleteById,\n            sort: this.sort,\n            sortAction: this.sortAction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/create\",\n          children: /*#__PURE__*/_jsxDEV(CreatePage, {\n            state: this.state,\n            handleInputChange: this.handleInputChange,\n            handleSubmit: this.handleSubmit,\n            handleReset: this.handleReset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TouristApp;","map":{"version":3,"sources":["C:/Users/nazmulhasan/Desktop/Learning/React/tourist-app/src/components/TouristApp.js"],"names":["React","Component","CreatePage","ListPage","BrowserRouter","Router","Switch","Route","TouristPlace","constructor","id","name","address","rating","type","picture","TouristApp","props","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","state","inputs","typeList","touristPlace","sortedTouristPlace","sort_state","handleInputChange","bind","handleSubmit","handleReset","rowDeleteById","sort","sortAction","sort_asc","sorted","place_list","map","a","Object","assign","b","sort_desc","setState","event","console","log","target","parentNode","new_list","filter","place","parseInt","document","getElementById","value","validateInputs","files","alert","types","BEACH","HILLS","FOUNTAIN","LANDMARK","toUpperCase","length","base_string","tourist_place","concat","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport CreatePage from './CreatePage';\r\nimport ListPage from './ListPage';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\n\r\nclass TouristPlace {\r\n    constructor(id, name, address, rating, type, picture) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.address = address;\r\n        this.rating = rating;\r\n        this.type = type;\r\n        this.picture = picture;\r\n    }\r\n}\r\n\r\nclass TouristApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            inputs: {\r\n                name: null,\r\n                address: null,\r\n                rating: null,\r\n                type: \"beach\",\r\n                picture: null,\r\n            },\r\n            typeList: [\"Beach\", \"Hills\", \"Fountain\", \"Landmark\"],\r\n            touristPlace: [],\r\n            sortedTouristPlace: [],\r\n            id: 1,\r\n            sort_state: 0,\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleReset = this.handleReset.bind(this);\r\n        this.rowDeleteById = this.rowDeleteById.bind(this);\r\n        this.sort = this.sort.bind(this);\r\n        this.sortAction = this.sortAction.bind(this);\r\n    }\r\n\r\n    sort_asc() {\r\n        let sorted = this.state.sortedTouristPlace;\r\n        let place_list = this.state.touristPlace\r\n        sorted = place_list.map(a => Object.assign({}, a));\r\n        sorted.sort(function(a, b) {\r\n            return a.rating - b.rating;\r\n        });\r\n        return sorted;\r\n    }\r\n    sort_desc() {\r\n        let sorted = this.state.sortedTouristPlace\r\n        let place_list = this.state.touristPlace\r\n        sorted = place_list.map(a => Object.assign({}, a));\r\n        sorted.sort(function(a, b) {\r\n            return b.rating - a.rating;\r\n        });\r\n        return sorted;\r\n    }\r\n    sort() {\r\n        switch (this.state.sort_state) {\r\n            case 0:\r\n                return this.state.touristPlace;\r\n            case 1:\r\n                return this.sort_asc();\r\n            case 2:\r\n                return this.sort_desc();\r\n            default:\r\n                return this.state.touristPlace;\r\n        }\r\n    }\r\n    sortAction() {\r\n        this.setState({\r\n            sort_state: ((this.state.sort_state+1)%3)\r\n        })\r\n    }\r\n\r\n    rowDeleteById(event) {\r\n        console.log(event.target.parentNode.parentNode);\r\n        const id = event.target.parentNode.parentNode.id;\r\n\r\n        var new_list = this.state.touristPlace.filter(function(place) {\r\n            return place.id !== parseInt(id);\r\n        });\r\n        console.log(new_list)\r\n        this.setState({\r\n            ...this.state,\r\n            touristPlace: new_list\r\n        })\r\n    }\r\n\r\n    handleReset(event) {\r\n        [ \"type\", \"name\", \"address\", \"rating\"].map( id =>\r\n            document.getElementById(id).value = null  \r\n        );\r\n        document.getElementById('picture').value = null;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            inputs: {\r\n                ...this.state.inputs,\r\n                name: null, address: null, rating: null, type: null, picture: null\r\n            }\r\n        });\r\n    }\r\n\r\n    toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    validateInputs() {\r\n        var name = document.getElementById('name').value;\r\n        var address = document.getElementById('address').value;\r\n        var rating = document.getElementById('rating').value;\r\n        var type = document.getElementById('type').value;\r\n        var picture = document.getElementById('picture').files;\r\n\r\n        if(name === \"\") {\r\n            alert(\"Name must be filled out\");\r\n            return false;\r\n        }\r\n        if(address === \"\") {\r\n            alert(\"Address must be filled out\");\r\n            return false;\r\n        }\r\n        if(rating === \"\" || parseInt(rating) < 1 || parseInt(rating) > 5) {\r\n            alert(\"Rating must be between 1 and 5\");\r\n            return false;\r\n        }\r\n\r\n        var types = {\r\n            BEACH : 0,\r\n            HILLS : 1,\r\n            FOUNTAIN : 2,\r\n            LANDMARK : 3\r\n        };\r\n\r\n        if(!(type.toUpperCase() in types)) {\r\n            alert(\"Type must be Beach/Hills/Fountain/Landmark\");\r\n            return false;\r\n        }\r\n\r\n        if(picture.length < 1) {\r\n            alert(\"Picture fiels is empty\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        if(!this.validateInputs()){\r\n            return;\r\n        }\r\n        const base_string = await this.toBase64(this.state.inputs.picture);\r\n\r\n        const tourist_place = new TouristPlace(this.state.id, this.state.inputs.name,\r\n                                                this.state.inputs.address, this.state.inputs.rating,\r\n                                                this.state.inputs.type, base_string);\r\n\r\n        var new_list = this.state.touristPlace.concat(tourist_place);\r\n        this.setState({\r\n            ...this.state,\r\n            touristPlace: new_list,\r\n            id: this.state.id + 1\r\n        })\r\n\r\n        this.handleReset(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        let {id, value} = event.target;\r\n        if(id === 'picture') {\r\n            this.setState({\r\n                ...this.state,\r\n                inputs: {\r\n                    ...this.state.inputs,\r\n                    picture: event.target.files[0]\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            inputs: {\r\n                ...this.state.inputs,\r\n                [id]: value\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        <ListPage state={this.state} rowDeleteById={this.rowDeleteById} sort={this.sort} sortAction={this.sortAction} />\r\n                    </Route>\r\n                    <Route exact path='/create'>\r\n                        <CreatePage state={this.state} handleInputChange={this.handleInputChange} handleSubmit={this.handleSubmit} handleReset={this.handleReset} />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TouristApp;"]},"metadata":{},"sourceType":"module"}