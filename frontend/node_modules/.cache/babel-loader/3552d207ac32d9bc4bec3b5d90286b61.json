{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      visuallyHidden = _ref.visuallyHidden,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"visuallyHidden\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"]);\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  }));\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isChild\"]);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      visuallyHidden = props.visuallyHidden,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"visuallyHidden\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"]);\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, function (child) {\n      return /*#__PURE__*/cloneElement(child, {\n        isChild: true\n      });\n    }) : renderProgressBar({\n      min: min,\n      now: now,\n      max: max,\n      label: label,\n      visuallyHidden: visuallyHidden,\n      striped: striped,\n      animated: animated,\n      bsPrefix: bsPrefix,\n      variant: variant\n    }, ref)\n  }));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/nazmulhasan/Desktop/Learning/React/tourist-app/node_modules/react-bootstrap/esm/ProgressBar.js"],"names":["_extends","_objectWithoutPropertiesLoose","classNames","React","cloneElement","useBootstrapPrefix","map","jsx","_jsx","ROUND_PRECISION","onlyProgressBar","props","propName","componentName","children","error","Children","forEach","child","element","ProgressBar","type","childType","childIdentifier","isValidElement","displayName","name","Error","defaultProps","min","max","animated","isChild","visuallyHidden","striped","getPercentage","now","percentage","Math","round","renderProgressBar","_ref","ref","_classNames","label","className","style","variant","bsPrefix","role","width","forwardRef","_ref2","wrapperProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      visuallyHidden = _ref.visuallyHidden,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"visuallyHidden\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"]);\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  }));\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isChild\"]);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      visuallyHidden = props.visuallyHidden,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"visuallyHidden\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"]);\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, function (child) {\n      return /*#__PURE__*/cloneElement(child, {\n        isChild: true\n      });\n    }) : renderProgressBar({\n      min: min,\n      now: now,\n      max: max,\n      label: label,\n      visuallyHidden: visuallyHidden,\n      striped: striped,\n      animated: animated,\n      bsPrefix: bsPrefix,\n      variant: variant\n    }, ref)\n  }));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}