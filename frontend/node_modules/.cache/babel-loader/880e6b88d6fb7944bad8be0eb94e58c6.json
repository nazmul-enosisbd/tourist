{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport * as React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0];\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, _extends({\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","map":{"version":3,"sources":["C:/Users/nazmulhasan/Desktop/Learning/React/tourist-app/node_modules/react-bootstrap/esm/DropdownToggle.js"],"names":["_extends","_objectWithoutPropertiesLoose","classNames","isRequiredForA11y","React","useDropdownToggle","useMergedRefs","Button","useBootstrapPrefix","useWrappedRefWithWarning","jsx","_jsx","DropdownToggle","forwardRef","_ref","ref","bsPrefix","split","className","childBsPrefix","_ref$as","as","Component","props","prefix","undefined","_useDropdownToggle","toggleProps","displayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,IAAIC,cAAc,GAAG,aAAaR,KAAK,CAACS,UAAN,CAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AACtE,MAAIC,QAAQ,GAAGF,IAAI,CAACE,QAApB;AAAA,MACIC,KAAK,GAAGH,IAAI,CAACG,KADjB;AAAA,MAEIC,SAAS,GAAGJ,IAAI,CAACI,SAFrB;AAAA,MAGIC,aAAa,GAAGL,IAAI,CAACK,aAHzB;AAAA,MAIIC,OAAO,GAAGN,IAAI,CAACO,EAJnB;AAAA,MAKIC,SAAS,GAAGF,OAAO,KAAK,KAAK,CAAjB,GAAqBb,MAArB,GAA8Ba,OAL9C;AAAA,MAMIG,KAAK,GAAGtB,6BAA6B,CAACa,IAAD,EAAO,CAAC,UAAD,EAAa,OAAb,EAAsB,WAAtB,EAAmC,eAAnC,EAAoD,IAApD,CAAP,CANzC;;AAQA,MAAIU,MAAM,GAAGhB,kBAAkB,CAACQ,QAAD,EAAW,iBAAX,CAA/B;;AAEA,MAAIG,aAAa,KAAKM,SAAtB,EAAiC;AAC/BF,IAAAA,KAAK,CAACP,QAAN,GAAiBG,aAAjB;AACD;;AAED,MAAIO,kBAAkB,GAAGrB,iBAAiB,EAA1C;AAAA,MACIsB,WAAW,GAAGD,kBAAkB,CAAC,CAAD,CADpC;;AAGAC,EAAAA,WAAW,CAACZ,GAAZ,GAAkBT,aAAa,CAACqB,WAAW,CAACZ,GAAb,EAAkBN,wBAAwB,CAACM,GAAD,EAAM,gBAAN,CAA1C,CAA/B,CAlBsE,CAkB6B;AACnG;;AAEA,SAAO,aAAaJ,IAAI,CAACW,SAAD,EAAYtB,QAAQ,CAAC;AAC3CkB,IAAAA,SAAS,EAAEhB,UAAU,CAACgB,SAAD,EAAYM,MAAZ,EAAoBP,KAAK,IAAIO,MAAM,GAAG,QAAtC;AADsB,GAAD,EAEzCG,WAFyC,EAE5BJ,KAF4B,CAApB,CAAxB;AAGD,CAxBiC,CAAlC;AAyBAX,cAAc,CAACgB,WAAf,GAA6B,gBAA7B;AACA,eAAehB,cAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport * as React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0];\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, _extends({\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;"]},"metadata":{},"sourceType":"module"}