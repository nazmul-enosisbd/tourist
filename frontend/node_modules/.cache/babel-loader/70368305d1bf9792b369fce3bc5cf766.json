{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nvar Form = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      validated = _ref.validated,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'form' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"validated\", \"as\"]);\n\n  return /*#__PURE__*/_jsx(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, validated && 'was-validated')\n  }));\n});\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Check: FormCheck,\n  Switch: Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect\n});","map":{"version":3,"sources":["C:/Users/nazmulhasan/Desktop/Learning/React/tourist-app/node_modules/react-bootstrap/esm/Form.js"],"names":["_extends","_objectWithoutPropertiesLoose","classNames","PropTypes","React","FormCheck","FormControl","FormGroup","FormLabel","FormRange","FormSelect","FormText","Switch","jsx","_jsx","propTypes","_ref","any","validated","bool","as","elementType","Form","forwardRef","ref","className","_ref$as","Component","props","displayName","Object","assign","Group","Control","Check","Label","Text","Range","Select"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,IAAIC,SAAS,GAAG;AACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,IAAI,EAAEb,SAAS,CAACc,GATF;;AAWd;AACF;AACA;AACA;AACEC,EAAAA,SAAS,EAAEf,SAAS,CAACgB,IAfP;AAgBdC,EAAAA,EAAE,EAAEjB,SAAS,CAACkB;AAhBA,CAAhB;AAkBA,IAAIC,IAAI,GAAG,aAAalB,KAAK,CAACmB,UAAN,CAAiB,UAAUP,IAAV,EAAgBQ,GAAhB,EAAqB;AAC5D,MAAIC,SAAS,GAAGT,IAAI,CAACS,SAArB;AAAA,MACIP,SAAS,GAAGF,IAAI,CAACE,SADrB;AAAA,MAEIQ,OAAO,GAAGV,IAAI,CAACI,EAFnB;AAAA,MAGIO,SAAS,GAAGD,OAAO,KAAK,KAAK,CAAjB,GAAqB,MAArB,GAA8BA,OAH9C;AAAA,MAIIE,KAAK,GAAG3B,6BAA6B,CAACe,IAAD,EAAO,CAAC,WAAD,EAAc,WAAd,EAA2B,IAA3B,CAAP,CAJzC;;AAMA,SAAO,aAAaF,IAAI,CAACa,SAAD,EAAY3B,QAAQ,CAAC,EAAD,EAAK4B,KAAL,EAAY;AACtDJ,IAAAA,GAAG,EAAEA,GADiD;AAEtDC,IAAAA,SAAS,EAAEvB,UAAU,CAACuB,SAAD,EAAYP,SAAS,IAAI,eAAzB;AAFiC,GAAZ,CAApB,CAAxB;AAID,CAXuB,CAAxB;AAYAI,IAAI,CAACO,WAAL,GAAmB,MAAnB;AACAP,IAAI,CAACP,SAAL,GAAiBA,SAAjB;AACA,eAAee,MAAM,CAACC,MAAP,CAAcT,IAAd,EAAoB;AACjCU,EAAAA,KAAK,EAAEzB,SAD0B;AAEjC0B,EAAAA,OAAO,EAAE3B,WAFwB;AAGjC4B,EAAAA,KAAK,EAAE7B,SAH0B;AAIjCO,EAAAA,MAAM,EAAEA,MAJyB;AAKjCuB,EAAAA,KAAK,EAAE3B,SAL0B;AAMjC4B,EAAAA,IAAI,EAAEzB,QAN2B;AAOjC0B,EAAAA,KAAK,EAAE5B,SAP0B;AAQjC6B,EAAAA,MAAM,EAAE5B;AARyB,CAApB,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nvar Form = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      validated = _ref.validated,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'form' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"validated\", \"as\"]);\n\n  return /*#__PURE__*/_jsx(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, validated && 'was-validated')\n  }));\n});\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Check: FormCheck,\n  Switch: Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect\n});"]},"metadata":{},"sourceType":"module"}