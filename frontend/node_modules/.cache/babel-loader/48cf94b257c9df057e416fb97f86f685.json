{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  var _useContext = useContext(AccordionContext),\n      activeEventKey = _useContext.activeEventKey,\n      onSelect = _useContext.onSelect;\n\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"bsPrefix\", \"className\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n\n  var _useContext2 = useContext(AccordionItemContext),\n      eventKey = _useContext2.eventKey;\n\n  var accordionOnClick = useAccordionButton(eventKey, onClick);\n\n  var _useContext3 = useContext(AccordionContext),\n      activeEventKey = _useContext3.activeEventKey;\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props, {\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, eventKey !== activeEventKey && 'collapsed')\n  }));\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","map":{"version":3,"sources":["C:/Users/nazmulhasan/Desktop/Learning/React/tourist-app-redux/node_modules/react-bootstrap/esm/AccordionButton.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useContext","classNames","AccordionContext","AccordionItemContext","useBootstrapPrefix","jsx","_jsx","useAccordionButton","eventKey","onClick","_useContext","activeEventKey","onSelect","e","eventKeyPassed","AccordionButton","forwardRef","_ref","ref","_ref$as","as","Component","bsPrefix","className","props","_useContext2","accordionOnClick","_useContext3","type","displayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCC,OAAtC,EAA+C;AACpD,MAAIC,WAAW,GAAGV,UAAU,CAACE,gBAAD,CAA5B;AAAA,MACIS,cAAc,GAAGD,WAAW,CAACC,cADjC;AAAA,MAEIC,QAAQ,GAAGF,WAAW,CAACE,QAF3B;;AAIA,SAAO,UAAUC,CAAV,EAAa;AAClB;AACJ;AACA;AACA;AACI,QAAIC,cAAc,GAAGN,QAAQ,KAAKG,cAAb,GAA8B,IAA9B,GAAqCH,QAA1D;AACA,QAAII,QAAJ,EAAcA,QAAQ,CAACE,cAAD,EAAiBD,CAAjB,CAAR;AACd,QAAIJ,OAAJ,EAAaA,OAAO,CAACI,CAAD,CAAP;AACd,GARD;AASD;AACD,IAAIE,eAAe,GAAG,aAAahB,KAAK,CAACiB,UAAN,CAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AACvE,MAAIC,OAAO,GAAGF,IAAI,CAACG,EAAnB;AAAA,MACIC,SAAS,GAAGF,OAAO,KAAK,KAAK,CAAjB,GAAqB,QAArB,GAAgCA,OADhD;AAAA,MAEIG,QAAQ,GAAGL,IAAI,CAACK,QAFpB;AAAA,MAGIC,SAAS,GAAGN,IAAI,CAACM,SAHrB;AAAA,MAIId,OAAO,GAAGQ,IAAI,CAACR,OAJnB;AAAA,MAKIe,KAAK,GAAG1B,6BAA6B,CAACmB,IAAD,EAAO,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,CAAP,CALzC;;AAOAK,EAAAA,QAAQ,GAAGlB,kBAAkB,CAACkB,QAAD,EAAW,kBAAX,CAA7B;;AAEA,MAAIG,YAAY,GAAGzB,UAAU,CAACG,oBAAD,CAA7B;AAAA,MACIK,QAAQ,GAAGiB,YAAY,CAACjB,QAD5B;;AAGA,MAAIkB,gBAAgB,GAAGnB,kBAAkB,CAACC,QAAD,EAAWC,OAAX,CAAzC;;AAEA,MAAIkB,YAAY,GAAG3B,UAAU,CAACE,gBAAD,CAA7B;AAAA,MACIS,cAAc,GAAGgB,YAAY,CAAChB,cADlC;;AAGA,MAAIU,SAAS,KAAK,QAAlB,EAA4B;AAC1BG,IAAAA,KAAK,CAACI,IAAN,GAAa,QAAb;AACD;;AAED,SAAO,aAAatB,IAAI,CAACe,SAAD,EAAYxB,QAAQ,CAAC;AAC3CqB,IAAAA,GAAG,EAAEA,GADsC;AAE3CT,IAAAA,OAAO,EAAEiB;AAFkC,GAAD,EAGzCF,KAHyC,EAGlC;AACR,qBAAiBhB,QAAQ,KAAKG,cADtB;AAERY,IAAAA,SAAS,EAAEtB,UAAU,CAACsB,SAAD,EAAYD,QAAZ,EAAsBd,QAAQ,KAAKG,cAAb,IAA+B,WAArD;AAFb,GAHkC,CAApB,CAAxB;AAOD,CA7BkC,CAAnC;AA8BAI,eAAe,CAACc,WAAhB,GAA8B,iBAA9B;AACA,eAAed,eAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  var _useContext = useContext(AccordionContext),\n      activeEventKey = _useContext.activeEventKey,\n      onSelect = _useContext.onSelect;\n\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"bsPrefix\", \"className\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n\n  var _useContext2 = useContext(AccordionItemContext),\n      eventKey = _useContext2.eventKey;\n\n  var accordionOnClick = useAccordionButton(eventKey, onClick);\n\n  var _useContext3 = useContext(AccordionContext),\n      activeEventKey = _useContext3.activeEventKey;\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props, {\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, eventKey !== activeEventKey && 'collapsed')\n  }));\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;"]},"metadata":{},"sourceType":"module"}