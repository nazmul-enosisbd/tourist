{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazmulhasan\\\\Desktop\\\\Learning\\\\React\\\\tourist-app-redux\\\\src\\\\components\\\\CreatePage.js\";\nimport React, { Component } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/CreatePage.css';\nimport { addPlace } from '../redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreatePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toBase64 = file => new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => resolve(reader.result);\n\n      reader.onerror = error => reject(error);\n    });\n\n    this.createOptinos = () => this.props.state.typeList.length ? this.props.state.typeList.map(data => /*#__PURE__*/_jsxDEV(\"option\", {\n      children: data\n    }, data, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)) : \"\";\n\n    this.state = {\n      inputs: {\n        name: null,\n        address: null,\n        rating: null,\n        type: \"beach\",\n        picture: null\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.props.handleReset;\n  }\n\n  validateInputs() {\n    var name = document.getElementById('name').value;\n    var address = document.getElementById('address').value;\n    var rating = document.getElementById('rating').value;\n    var type = document.getElementById('type').value;\n    var picture = document.getElementById('picture').files;\n\n    if (name === \"\") {\n      alert(\"Name must be filled out\");\n      return false;\n    }\n\n    if (address === \"\") {\n      alert(\"Address must be filled out\");\n      return false;\n    }\n\n    if (rating === \"\" || parseInt(rating) < 1 || parseInt(rating) > 5) {\n      alert(\"Rating must be between 1 and 5\");\n      return false;\n    }\n\n    var types = {\n      BEACH: 0,\n      HILLS: 1,\n      FOUNTAIN: 2,\n      LANDMARK: 3\n    };\n\n    if (!(type.toUpperCase() in types)) {\n      alert(\"Type must be Beach/Hills/Fountain/Landmark\");\n      return false;\n    }\n\n    if (picture.length < 1) {\n      alert(\"Picture fiels is empty\");\n      return false;\n    }\n\n    return true;\n  }\n\n  handleReset(event) {\n    [\"type\", \"name\", \"address\", \"rating\"].map(id => document.getElementById(id).value = null);\n    document.getElementById('picture').value = null;\n    this.setState({ ...this.state,\n      inputs: { ...this.state.inputs,\n        name: null,\n        address: null,\n        rating: null,\n        type: null,\n        picture: null\n      }\n    });\n  }\n\n  async handleSubmit(event) {\n    if (!this.validateInputs()) {\n      return;\n    }\n\n    const base_string = await this.toBase64(this.state.inputs.picture);\n    const place = {\n      id: this.props.id,\n      name: this.state.inputs.name,\n      address: this.state.inputs.address,\n      rating: this.state.inputs.rating,\n      type: this.state.inputs.type,\n      picture: base_string\n    };\n    this.props.addPlace(place);\n    this.handleReset(this);\n  }\n\n  handleInputChange(event) {\n    let {\n      id,\n      value\n    } = event.target;\n\n    if (id === 'picture') {\n      this.setState({ ...this.state,\n        inputs: { ...this.state.inputs,\n          picture: event.target.files[0]\n        }\n      });\n      return;\n    }\n\n    this.setState({ ...this.state,\n      inputs: { ...this.state.inputs,\n        [id]: value\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \" Add a New Tourist Place \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        id: \"test-form\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: \"lg\",\n            lg: 3,\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"name\",\n              size: \"lg\",\n              type: \"text\",\n              bsPrefix: \"custom-input\",\n              onChange: this.handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: \"lg\",\n            lg: 3,\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"address\",\n              size: \"lg\",\n              type: \"text\",\n              bsPrefix: \"custom-input\",\n              onChange: this.handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: \"lg\",\n            lg: 3,\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"rating\",\n              size: \"lg\",\n              type: \"number\",\n              min: \"1\",\n              max: \"5\",\n              bsPrefix: \"custom-input\",\n              onChange: this.handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: \"lg\",\n            lg: 3,\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"type\",\n              size: \"lg\",\n              as: \"select\",\n              bsPrefix: \"custom-input\",\n              onChange: this.handleInputChange,\n              required: true,\n              children: this.createOptinos()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: \"lg\",\n            lg: 3,\n            children: \"Picture:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"picture\",\n              size: \"lg\",\n              type: \"file\",\n              accept: \"image/*\",\n              bsPrefix: \"custom-input\",\n              onChange: this.handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          bsPrefix: \"custom-btn-reset\",\n          onClick: this.handleReset,\n          children: \" Reset \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          bsPrefix: \"custom-btn-submit\",\n          onClick: this.handleSubmit,\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"back-link\",\n            children: \"Back to Tourist Place List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 34\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    place_list: state.place_list,\n    id: state.id\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPlace: place => dispatch(addPlace(place))\n  };\n}; //export default CreatePage;\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePage);","map":{"version":3,"sources":["C:/Users/nazmulhasan/Desktop/Learning/React/tourist-app-redux/src/components/CreatePage.js"],"names":["React","Component","Form","Row","Col","Button","Link","connect","addPlace","CreatePage","constructor","props","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","createOptinos","state","typeList","length","map","data","inputs","name","address","rating","type","picture","handleInputChange","bind","handleSubmit","handleReset","validateInputs","document","getElementById","value","files","alert","parseInt","types","BEACH","HILLS","FOUNTAIN","LANDMARK","toUpperCase","event","id","setState","base_string","place","target","render","textAlign","mapStateToProps","place_list","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Form,Row, Col, Button} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style/CreatePage.css';\r\nimport { addPlace } from '../redux';\r\n\r\nclass CreatePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inputs: {\r\n                name: null,\r\n                address: null,\r\n                rating: null,\r\n                type: \"beach\",\r\n                picture: null,\r\n            },\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleReset = this.props.handleReset;\r\n    }\r\n\r\n    validateInputs() {\r\n        var name = document.getElementById('name').value;\r\n        var address = document.getElementById('address').value;\r\n        var rating = document.getElementById('rating').value;\r\n        var type = document.getElementById('type').value;\r\n        var picture = document.getElementById('picture').files;\r\n\r\n        if(name === \"\") {\r\n            alert(\"Name must be filled out\");\r\n            return false;\r\n        }\r\n        if(address === \"\") {\r\n            alert(\"Address must be filled out\");\r\n            return false;\r\n        }\r\n        if(rating === \"\" || parseInt(rating) < 1 || parseInt(rating) > 5) {\r\n            alert(\"Rating must be between 1 and 5\");\r\n            return false;\r\n        }\r\n\r\n        var types = {\r\n            BEACH : 0,\r\n            HILLS : 1,\r\n            FOUNTAIN : 2,\r\n            LANDMARK : 3\r\n        };\r\n\r\n        if(!(type.toUpperCase() in types)) {\r\n            alert(\"Type must be Beach/Hills/Fountain/Landmark\");\r\n            return false;\r\n        }\r\n\r\n        if(picture.length < 1) {\r\n            alert(\"Picture fiels is empty\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    handleReset(event) {\r\n        [ \"type\", \"name\", \"address\", \"rating\"].map( id =>\r\n            document.getElementById(id).value = null  \r\n        );\r\n        document.getElementById('picture').value = null;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            inputs: {\r\n                ...this.state.inputs,\r\n                name: null, address: null, rating: null, type: null, picture: null\r\n            }\r\n        });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        if(!this.validateInputs()){\r\n            return;\r\n        }\r\n        const base_string = await this.toBase64(this.state.inputs.picture);\r\n        const place = {\r\n            id: this.props.id,\r\n            name: this.state.inputs.name,\r\n            address: this.state.inputs.address,\r\n            rating: this.state.inputs.rating,\r\n            type: this.state.inputs.type,\r\n            picture: base_string\r\n        }\r\n\r\n        this.props.addPlace(place);\r\n\r\n        this.handleReset(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        let {id, value} = event.target;\r\n        if(id === 'picture') {\r\n            this.setState({\r\n                ...this.state,\r\n                inputs: {\r\n                    ...this.state.inputs,\r\n                    picture: event.target.files[0]\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            inputs: {\r\n                ...this.state.inputs,\r\n                [id]: value\r\n            }\r\n        });\r\n    }\r\n\r\n    createOptinos = () => \r\n        this.props.state.typeList.length \r\n        ? this.props.state.typeList.map(data => \r\n            <option key={data}>{data}</option>\r\n        )\r\n        : \"\";\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"centered-wrapper\">\r\n                <h2 style={{textAlign: \"center\"}}> Add a New Tourist Place </h2>\r\n                <br /> <br />\r\n                <Form.Group id=\"test-form\">\r\n                    <Row>\r\n                        <Form.Label column=\"lg\" lg={3}>\r\n                            Name:\r\n                        </Form.Label>\r\n                        <Col>\r\n                            <Form.Control id=\"name\" size=\"lg\" type=\"text\" bsPrefix=\"custom-input\" onChange={this.handleInputChange} required />\r\n                        </Col>\r\n                    </Row>\r\n                    <br /> <br />\r\n                    <Row>\r\n                        <Form.Label column=\"lg\" lg={3}>\r\n                            Address:\r\n                        </Form.Label>\r\n                        <Col>\r\n                            <Form.Control id=\"address\" size=\"lg\" type=\"text\" bsPrefix=\"custom-input\" onChange={this.handleInputChange} required />\r\n                        </Col>\r\n                    </Row>\r\n                    <br /> <br />\r\n                    <Row>\r\n                        <Form.Label column=\"lg\" lg={3}>\r\n                            Rating:\r\n                        </Form.Label>\r\n                        <Col>\r\n                            <Form.Control id=\"rating\" size=\"lg\" type=\"number\" min=\"1\" max=\"5\" bsPrefix=\"custom-input\" onChange={this.handleInputChange} required />\r\n                        </Col>\r\n                    </Row>\r\n                    <br /> <br />\r\n                    <Row>\r\n                        <Form.Label column=\"lg\" lg={3}>\r\n                            Type:\r\n                        </Form.Label>\r\n                        <Col>\r\n                            <Form.Control id=\"type\" size=\"lg\" as=\"select\" bsPrefix=\"custom-input\" onChange={this.handleInputChange} required>\r\n                                {this.createOptinos()}\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Row>\r\n                    <br /> <br />\r\n                    <Row>\r\n                        <Form.Label column=\"lg\" lg={3}>\r\n                            Picture:\r\n                        </Form.Label>\r\n                        <Col>\r\n                            <Form.Control id=\"picture\" size=\"lg\" type=\"file\" accept=\"image/*\" bsPrefix=\"custom-input\" onChange={this.handleInputChange} required />\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Button bsPrefix=\"custom-btn-reset\" onClick={this.handleReset}> Reset </Button>\r\n                    <Button bsPrefix=\"custom-btn-submit\" onClick={this.handleSubmit}> Submit </Button>\r\n                    <br />\r\n                    <Link to='/'><p className=\"back-link\">Back to Tourist Place List</p> </Link>\r\n                </Form.Group>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        place_list: state.place_list,\r\n        id: state.id\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addPlace: (place) => dispatch(addPlace(place))\r\n    }\r\n}\r\n\r\n//export default CreatePage;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatePage)"]},"metadata":{},"sourceType":"module"}